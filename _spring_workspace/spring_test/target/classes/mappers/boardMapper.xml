<?xml version="1.0" encoding="UTF-8"?>
<!-- https://mybatis.org/mybatis-3/ko/getting-started.html 에서 가져와야한다. -->
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
  <mapper namespace="com.ezen.www.repository.BoardDAO">
  
  	<!-- parameterType이 String , int는 입력하면되지만 -->
  	<!-- parameterType이 BoardVO면 전부다 입력을 해줘야한다 -->
  	
  	<insert id="insert" parameterType="com.ezen.www.domain.BoardVO">
  		INSERT INTO board(title , writer , content)
  		VALUES(#{title} , #{writer} , #{content})
  	</insert>
  
  	
  	<select id="selectList" resultType="com.ezen.www.domain.BoardVO">
  		SELECT * FROM board 
  		WHERE isDel = 'N' 
  		<include refid="search"></include>
  		ORDER BY bno DESC
  		LIMIT #{pageStart} , #{qty}
  	</select>
  
  
  	<select id="detail" resultType="com.ezen.www.domain.BoardVO">
  		SELECT * FROM board WHERE bno=#{bno}
  	</select>
  	
  	
  	<update id="addreadcount">
  		UPDATE board SET read_count = read_count+1 WHERE bno=#{bno}
  	</update>
  
	 <update id="modify">
	 	UPDATE board SET title=#{title},
	 	 content=#{content},
	 	 reg_date=now(),
	 	 read_count=read_count-2
	 	WHERE bno=#{bno}
	 </update>
	 
	 
	 <update id="delete">
	 	<!-- DELETE FROM board WHERE bno=#{bno} -->
	 	UPDATE board 
	 	SET isdel="Y"
	 	WHERE bno=#{bno}
	 </update>
	 
	 <select id="getTotalCount"	resultType="int">
	 	SELECT count(bno) 
	 	FROM board 
	 	WHERE isDel='N'
	 	<include refid="search"></include> <!-- 검색창추가할때 넣어야할것 -->
	 </select>
	 
	 <select id="selectBno" resultType="int">
	 	SELECT MAX(bno)
	 	FROM board
	 	<!-- SELECT bno 
	 	FROM board 
	 	ORDER BY bno 
	 	DESC LIMIT 0 -->
	 </select>
	 
  
  <!-- 검색할때 추가할것 -->
  
<!--   SELECT * FROM board WHERE isDel='N' AND (or.. or..) -->
  
  <sql id="search">
  	<if test="type != null"> <!-- 검색하는값이 비어있으면 -->
  		<trim prefix="and (" suffix=")" prefixOverrides="or"> <!-- trim안에있는  prefix , prefixOverrides 같아야한다-->
  			<foreach collection="typeToArray" item="type"> <!-- 검색하는값이 여러가지인경우 제목&내용  -->
  				<trim prefix="or"> <!-- suffix : 뒤에있는 or을 지운다 --> <!-- prefix : 앞에 있는 or을 지운다 -->
  					<choose>
  						<when test="type=='t'.toString()"> <!-- 't' 문자로 취급하지않는다. 그래서 뒤에 .toString()을 입력해야한다-->
  							title LIKE CONCAT('%',#{keyword},'%')
  						</when> 
  						<when test="type=='w'.toString()"> 
  							writer LIKE CONCAT('%',#{keyword},'%')
  						</when> 
  						<when test="type=='c'.toString()">
  							content LIKE CONCAT('%',#{keyword},'%')
  						</when> 
  					</choose>
  				</trim>
  			</foreach>
  		</trim>
  	</if>
  </sql>
  
  
  
  
  </mapper>